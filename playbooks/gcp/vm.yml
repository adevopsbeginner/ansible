---
- name: Ansible playbook to deploy gcp vm
  hosts: localhost
  connection: local

  vars:
    this_name: abeginner
    application_version: 0.1.3
    gcp_project_id: "aries-462505"
    gcp_region: "us-central1"
    gcp_zone: "{{ gcp_region }}-c"
    gcp_auth_kind: "serviceaccount"
    gcp_cred_file: "{{ lookup('env','HOME') }}/gcp_ansible_sa.json"
    vm_name: "{{ this_name }}"
    vm_machine_type: "e2-micro"
    vm_source_image: "projects/debian-cloud/global/images/family/debian-12"
    vpc_name: "abeginner"
    vpc_subnet_name: "abeginner"
    label_created_by: adevopsbeginner
    label_youtube_channel: adevopsbeginner
    label_website: https_www_adevopsbeginner_site

  tasks:
    - name: Where/When
      ansible.builtin.debug:
        msg: "{{ ansible_fqdn }} - {{ ansible_date_time.date }} {{ ansible_date_time.time }}"

    - name: Get VPC (network) info
      google.cloud.gcp_compute_network_info:
        project: "{{ gcp_project_id }}"
        filters:
          - "name = {{ vpc_name }}"
        auth_kind: "{{ gcp_auth_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: vpc_network

    - name: Show VPC info
      ansible.builtin.debug:
        var: vpc_network

    - name: Get Subnet info in the VPC
      google.cloud.gcp_compute_subnetwork_info:
        project: "{{ gcp_project_id }}"
        region: "{{ gcp_region }}"
        filters:
          - "name = {{ vpc_subnet_name }}"
        auth_kind: "{{ gcp_auth_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: vpc_subnet

    - name: Show VPC subenet info
      ansible.builtin.debug:
        var: vpc_subnet

    - name: Create VM instance
      google.cloud.gcp_compute_instance:
        name: "{{ vm_name }}"
        project: "{{ gcp_project_id }}"
        zone: "{{ gcp_zone }}"
        machine_type: "{{ vm_machine_type }}"
        disks:
          - auto_delete: true
            boot: true
            initialize_params:
              source_image: "{{ vm_source_image }}"
        network_interfaces:
          - network:
              selfLink: "{{ vpc_network.resources[0].selfLink }}"
            subnetwork:
              selfLink: "{{ vpc_subnet.resources[0].selfLink }}"
            access_configs:
              - name: External NAT
                type: ONE_TO_ONE_NAT
        tags:
          items:
            - ssh
            - http
            - https
        metadata:
          enable-oslogin: "TRUE"
          metadata_startup_script: |
            #!/bin/bash
            apt-get update -y
        service_accounts:
          - email: "ansible@{{ gcp_project_id }}.iam.gserviceaccount.com"
            scopes:
              - https://www.googleapis.com/auth/cloud-platform
              - https://www.googleapis.com/auth/devstorage.read_only 
        labels:
          deployment: ansible
          created_by: adevopsbeginner
          youtube_channel: "{{ label_youtube_channel }}"
          website: "{{ label_website }}"
        auth_kind: "{{ gcp_auth_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: vm_info

    - name: Set ip address
      ansible.builtin.set_fact:
        vm_public_ip_address: "{{ vm_info.networkInterfaces[0].accessConfigs[0].natIP }}"

    - name: VM natIP
      ansible.builtin.debug:
        var: vm_public_ip_address

    - name: Add new VM to inventory
      ansible.builtin.add_host:
        name: "{{ vm_public_ip_address }}"
        groups: new_vms

    - name: Wait for SSH to be available
      ansible.builtin.wait_for:
        host: "{{ vm_public_ip_address }}"
        port: 22
        delay: 1       # wait before first check
        timeout: 120
        state: started
